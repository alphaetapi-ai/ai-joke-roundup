<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= topic %> Joke</title>
    <link rel="stylesheet" href="/styles.css" />
</head>
<body>
    <%- include('_header') %>
    <div class="container">
        <h1><%= type %> Joke About "<%= topic %>"</h1>
        
        <div class="joke"><%= joke_content %></div>
        
        <div class="explanation">
            <h3>The basis for this joke:</h3>
            <%= explanation %>
        </div>
        
        <p><small><strong>Date:</strong> <%= date_created %> | <strong>Generated by:</strong> <%= model_name %></small></p>
        
        <div style="margin: 20px 0; text-align: center;">
            <h3>Rate this joke:</h3>
            <button id="btn-funny" onclick="voteJoke(<%= joke_id %>, 'funny')" style="margin: 5px; padding: 10px 20px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; transition: all 0.3s;">üòÇ Funny</button>
            <button id="btn-okay" onclick="voteJoke(<%= joke_id %>, 'okay')" style="margin: 5px; padding: 10px 20px; background-color: #FFA500; color: white; border: none; border-radius: 4px; cursor: pointer; transition: all 0.3s;">üòê Okay</button>
            <button id="btn-dud" onclick="voteJoke(<%= joke_id %>, 'dud')" style="margin: 5px; padding: 10px 20px; background-color: #FF6B6B; color: white; border: none; border-radius: 4px; cursor: pointer; transition: all 0.3s;">üò¥ Dud</button>
        </div>
        
        <script>
        let currentVote = '<%= user_vote || "" %>';
        
        async function voteJoke(jokeId, rating) {
            console.log('Vote button clicked:', jokeId, rating);
            
            try {
                console.log('Sending vote request...');
                const response = await fetch('/vote', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        joke_id: jokeId,
                        rating: rating
                    })
                });
                
                console.log('Response received:', response.status);
                const result = await response.json();
                console.log('Response data:', result);
                
                if (response.ok) {
                    updateButtonStates(rating, result.message);
                } else {
                    console.error('Vote error:', result.message);
                }
            } catch (error) {
                console.error('Error voting:', error);
            }
        }
        
        function updateButtonStates(rating, message) {
            console.log('Updating button states:', rating, message);
            
            // Reset all buttons to default state
            const allButtons = ['btn-funny', 'btn-okay', 'btn-dud'];
            allButtons.forEach(btnId => {
                const btn = document.getElementById(btnId);
                btn.style.opacity = '1';
                btn.style.transform = 'scale(1)';
                btn.style.boxShadow = 'none';
            });
            
            if (message.includes('removed')) {
                // Vote was removed - no button should be selected
                currentVote = null;
                console.log('Vote removed, all buttons reset');
            } else {
                // Vote was added or changed
                currentVote = rating;
                const selectedButton = document.getElementById(`btn-${rating}`);
                
                if (selectedButton) {
                    // Make selected button more prominent
                    selectedButton.style.opacity = '1';
                    selectedButton.style.transform = 'scale(1.1)';
                    selectedButton.style.boxShadow = '0 0 10px rgba(0,0,0,0.3)';
                    
                    // Make other buttons less prominent
                    allButtons.forEach(btnId => {
                        if (btnId !== `btn-${rating}`) {
                            const btn = document.getElementById(btnId);
                            btn.style.opacity = '0.5';
                        }
                    });
                    
                    console.log(`Button ${rating} selected`);
                } else {
                    console.error('Button not found:', `btn-${rating}`);
                }
            }
        }
        
        // Initialize button states on page load
        document.addEventListener('DOMContentLoaded', function() {
            if (currentVote) {
                console.log('Initial vote detected:', currentVote);
                updateButtonStates(currentVote, 'Vote loaded');
            }
        });
        </script>
        
        <p><a href="/recent_jokes">‚Üê Back to Recent Jokes</a> | <a href="/">‚Üê Back to Generator</a></p>
    </div>
</body>
</html>